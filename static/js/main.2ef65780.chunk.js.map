{"version":3,"sources":["components/HomePage/HomePage.tsx","components/PageNotFound/PageNotFound.tsx","components/PageNavLink/PageNavLink.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonInfo/PersonInfo.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","PageNotFound","PageNavLink","to","text","isActive","classNames","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","sex","slug","name","isWoman","classnames","PersonItem","person","born","died","motherName","mother","fatherName","father","useParams","selectedSlug","selectedTodo","PeopleTable","people","map","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useEffect","fetchedPeople","peopleWithParents","find","personFather","personMother","catch","finally","length","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.2ef65780.chunk.js","sourcesContent":["import { FC } from 'react';\n\nexport const HomePage: FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { FC } from 'react';\n\nexport const PageNotFound: FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string;\n  text: string;\n}\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => classNames('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })}\n    to={to}\n  >\n    {text}\n  </NavLink>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classnames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface Props {\n  sex: string;\n  slug: string;\n  name: string;\n}\n\nexport const PersonLink: FC<Props> = ({ sex, slug, name }) => {\n  const isWoman = sex === 'f';\n\n  return (\n    <Link\n      className={classnames({ 'has-text-danger': isWoman })}\n      to={`/people/${slug}`}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonItem: FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    mother,\n    fatherName,\n    father,\n    slug,\n  } = person;\n\n  const { selectedSlug = '' } = useParams();\n\n  const selectedTodo = selectedSlug === slug;\n\n  return (\n    <>\n      <tr\n        data-cy=\"person\"\n        className={classnames({ 'has-background-warning': selectedTodo })}\n      >\n        <td>\n          <PersonLink sex={sex} slug={slug} name={name} />\n        </td>\n\n        <td>{sex}</td>\n        <td>{born}</td>\n        <td>{died}</td>\n        <td>\n          {mother ? (\n            <PersonLink\n              sex={mother.sex}\n              slug={mother.slug}\n              name={mother.name}\n            />\n          ) : (\n            motherName || '-'\n          )}\n        </td>\n        <td>\n          {father ? (\n            <PersonLink\n              sex={father.sex}\n              slug={father.slug}\n              name={father.name}\n            />\n          ) : (\n            fatherName || '-'\n          )}\n        </td>\n      </tr>\n    </>\n  );\n};\n","import { FC } from 'react';\nimport { PersonItem } from '../PersonInfo/PersonInfo';\nimport { Person } from '../../types';\n\ninterface Props {\n  people: Person[]\n}\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => (\n          <PersonItem person={person} key={person.slug} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  const loadPeople = () => {\n    getPeople()\n      .then((fetchedPeople) => {\n        const peopleWithParents = fetchedPeople.map((person) => {\n          const father = fetchedPeople.find(\n            (personFather) => personFather.name === person.fatherName,\n          );\n\n          const mother = fetchedPeople.find(\n            (personMother) => personMother.name === person.motherName,\n          );\n\n          return {\n            ...person,\n            father,\n            mother,\n          };\n        });\n\n        setPeople(peopleWithParents);\n      })\n      .catch(() => {\n        setIsError(true);\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {people.length === 0 && !isLoading && !isError && (\n            <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n          )}\n\n          {people.length > 0 && <PeopleTable people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PageNotFound } from './components/PageNotFound/PageNotFound';\nimport { PageNavLink } from './components/PageNavLink/PageNavLink';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <PageNavLink to=\"/\" text=\"Home\" />\n            <PageNavLink to=\"/people\" text=\"People\" />\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n            <Route path=\"/people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":selectedSlug\" element={<PeoplePage />} />\n            </Route>\n\n            <Route path=\"*\" element={<PageNotFound />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}